<?php
session_start();

// Check if the required POST data is provided
if (isset($_POST['tableHtml'])) {
    // Retrieve posted data and sanitize it
    $tableHtml = $_POST['tableHtml'] ?? '';
    $totalAmount = $_POST['totalAmount'] ?? '';
    $startDate = $_POST['startDate'] ?? 'N/A';
    $endDate = $_POST['endDate'] ?? 'N/A';

    // Validate the required data
    if (empty($tableHtml)) {
        // Log error (optional)
        error_log("No table HTML content received.");
        exit("No HTML content provided.");
    }

    // Sanitize the total amount to prevent security issues
    $totalAmount = filter_var($totalAmount, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION);

    // Get the current timestamp and username from the session (if available)
    $timestamp = date('Y-m-d H:i:s');
    $username = $_SESSION['user_names'] ?? 'Unknown User';

    // Generate a proper filename for the report (including date range)
    $filename = 'Performance_Report_' . $startDate . '_to_' . $endDate . '.csv';

    // Clear output buffering to prevent any unexpected output
    if (ob_get_length()) {
        ob_clean();
    }

    // Set the headers to force download the CSV file
    header('Content-Type: text/csv; charset=utf-8');
    header('Content-Disposition: attachment; filename="' . $filename . '"');

    // Open output stream for CSV file
    $output = fopen('php://output', 'w');

    // Optionally include UTF-8 BOM for Excel compatibility
    // Uncomment if Excel is a primary target platform
    // fprintf($output, chr(0xEF) . chr(0xBB) . chr(0xBF));

    // Add the title row with bold style (simulated using uppercase) and the period
    fputcsv($output, ['PERFORMANCE REPORT']);  // Title
    fputcsv($output, ['Reporting Period:', $startDate, 'to', $endDate]);  // Period under title
    fputcsv($output, []);  // Blank row for separation

    // Add column headers for the detailed table data
    fputcsv($output, ['Ward Name', 'Stream Name', 'Target Amount', 'Collected Amount', 'Performance']);

    // Parse the table HTML to extract rows and columns
    preg_match_all('/<tr>(.*?)<\/tr>/s', $tableHtml, $rows);

    // Process each row and extract the data for CSV
    foreach ($rows[1] as $row) {
        // Extract columns from the row
        preg_match_all('/<td.*?>(.*?)<\/td>/s', $row, $cols);
        
        // Clean and prepare the row data for CSV
        $csvRow = array_map('trim', array_map('strip_tags', $cols[1]));
        
        // Write non-empty rows only
        if (!empty(array_filter($csvRow))) {
            fputcsv($output, $csvRow);
        }
    }

    // Add a blank row for separation before total
    fputcsv($output, []);
    
    // Add the total figure at the bottom
    fputcsv($output, ['Total Amount Collected:', 'Ksh ' . number_format($totalAmount, 0)]);

    // Add blank row for separation
    fputcsv($output, []);

    // Add the 'Generated By' and 'Timestamp' information at the bottom
    fputcsv($output, ['Generated By:', $username]);
    fputcsv($output, ['Generated On:', $timestamp]);

    // Close the output stream
    fclose($output);

    // End the script to avoid any further output
    exit;

} else {
    // Show an error message if no HTML content is received via POST
    echo "No HTML content provided!";
}
